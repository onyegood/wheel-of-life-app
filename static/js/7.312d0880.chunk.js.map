{"version":3,"sources":["redux/actions/message.js","pages/auth/ForgotPasswordPage.js"],"names":["clearMessage","type","CLEAR_MESSAGE","ForgotPasswordPage","state","data","email","error","isLoading","isProcessing","message","componentWillReceiveProps","nextProps","undefined","setState","setTimeout","toast","TYPE","ERROR","componentDidMount","onChange","e","target","name","value","onSubmit","preventDefault","validate","Object","keys","length","payload","props","submit","success","SUCCESS","history","push","this","page","className","id","src","alt","class","for","width","height","viewBox","fill","stroke","xmlns","d","stroke-width","stroke-linecap","stroke-linejoin","pattern","fill-rule","clip-rule","onClick","alert","to","Component","mapDispatchToState","fetchCurrentUserRequest","forgotPasswordRequest","connect","auth"],"mappings":"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","file":"static/js/7.312d0880.chunk.js","sourcesContent":["import {\n    CLEAR_MESSAGE\n} from \"../types/message\";\n\nexport const clearMessage = () => ({ type: CLEAR_MESSAGE });","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { fetchCurrentUserRequest, forgotPasswordRequest } from \"../../redux/actions/auth\";\nimport { toast } from \"react-toastify\";\nimport { Link } from 'react-router-dom';\nimport { clearMessage } from \"../../redux/actions/message\";\nclass ForgotPasswordPage extends Component {\n\n    state = {\n        data: {\n            email: \"\"\n        },\n        error: {},\n        isLoading: true,\n        isProcessing: false,\n        message: ''\n    };\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.message !== undefined) {\n            this.setState({ message: nextProps.message });\n        }\n        setTimeout(() => {\n            toast(this.state.error.message, { type: toast.TYPE.ERROR });\n            this.setState({ isProcessing: false });\n        }, 500);\n    }\n\n    componentDidMount = () => {\n        setTimeout(() => this.setState({ isLoading: false }), 2000);\n    }\n\n    onChange = e => this.setState({\n        data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n        }\n    });\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.setState({ isProcessing: true });\n        const error = this.validate(this.state.data);\n        this.setState({ error });\n        if (Object.keys(error).length === 0) {\n            const payload = {\n                email: this.state.data.email\n            };\n            this.props.submit(payload);\n            setTimeout(() => {\n                if (this.props.message.success) {\n                    toast(this.props.message.payload, { type: toast.TYPE.SUCCESS });\n                    this.setState({ isProcessing: false });\n                    history.push(\"/login\");\n                } else {\n                    toast(this.props.message.payload, { type: toast.TYPE.ERROR });\n                    this.setState({ isProcessing: false });\n                }\n            }, 3000);\n            setTimeout(() => {\n                this.props.clearMessage();\n            }, 4000);\n        } else {\n            this.setState({ isProcessing: false });\n        }\n    };\n\n    validate = data => {\n        const error = {};\n        if (!data.email)\n            error.email = \"Invalid email\";\n        return error;\n    };\n    render() {\n\n        const { data, error, isLoading, isProcessing } = this.state;\n        //const { loaded } = this.props;\n        const page =\n            <div className=\"bg-white is-sign-in\">\n                <main className=\"main\" id=\"mainContent\">\n                    <div className=\"major-bg maxwidth-xxl mx-auto\">\n                        <section className=\"centered-box sign-in-wrapper auth-container\">\n                            <header className=\"logo-container mb-2h\">\n                                <img src=\"/assets/img/npower-logo.png\" alt=\"npower-logo\" />\n                            </header>\n                            <br />\n                            <form onSubmit={this.onSubmit}\n                                id=\"sign-in-form\"\n                                className=\"aut sign-in-form box-shad-padded bg-white\">\n                                <label class=\"form-label tx-c fw-bold mb-3 capitalize\" for=\"sign-up-form\">Forgot Password</label>\n                                <p class=\"instruction\">\n                                    Please enter the same email address you used upon signup.\n                            </p>\n                                <div className=\"email input\">\n                                    <label for=\"\">\n                                        email address\n                                </label>\n                                    <svg width=\"20\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M4.8 5H19.2C20.19 5 21 5.81 21 6.8V17.6C21 18.59 20.19 19.4 19.2 19.4H4.8C3.81 19.4 3 18.59 3 17.6V6.8C3 5.81 3.81 5 4.8 5Z\"\n                                            stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        <path d=\"M21 6.80005L12 13.1L3 6.80005\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                            stroke-linejoin=\"round\" />\n                                    </svg>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n                                        value={data.email}\n                                        onChange={this.onChange}\n                                    />\n                                    {error && error.email ?\n                                        <p className=\"warning\">\n                                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                                                    d=\"M8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16ZM7 7.9996H9V3.9996H7V7.9996ZM7 11.9996H9V9.9996H7V11.9996Z\"\n                                                    fill=\"#E7040F\" />\n                                            </svg><span className=\"co-warning nanotext\">{error.email}</span>\n                                        </p> : ''}\n                                </div>\n\n                                {isProcessing ?\n                                    <span\n                                        onClick={() => alert('Processing please wait...')}\n                                        className=\"submit mb-1 mt-3 d-flx al-i-c j-c-c\">\n                                        <span className=\"ml-h\">\n                                            <i className=\"fa fa-spinner fa-spin\" /> please wait...\n                                    </span>\n                                    </span>\n                                    :\n                                    <button className=\"submit mb-1 mt-3 d-flx al-i-c j-c-c\">\n                                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"\n                                            fill=\"none\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path\n                                                d=\"M4.16667 9.16667H15.8333C16.7538 9.16667 17.5 9.91286 17.5 10.8333V16.6667C17.5 17.5871 16.7538 18.3333 15.8333 18.3333H4.16667C3.24619 18.3333 2.5 17.5871 2.5 16.6667V10.8333C2.5 9.91286 3.24619 9.16667 4.16667 9.16667Z\"\n                                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                            <path\n                                                d=\"M14.1666 9.16667V5.83334C14.1677 4.80005 13.7847 3.80323 13.0921 3.03639C12.3996 2.26956 11.4468 1.78742 10.4187 1.68358C9.39064 1.57974 8.36067 1.86159 7.52873 2.47443C6.69679 3.08728 6.12224 3.98738 5.91662 5.00001\"\n                                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        </svg><span className=\"ml-h\">\n                                            Reset Password\n                                    </span>\n                                    </button>\n                                }\n\n                                <p class=\"option\">\n                                    Have an account? <Link className=\"capitalize tx-r nanofont mt-h\" to=\"/\">Sign In</Link>\n                                </p>\n\n                            </form>\n                        </section>\n                        <footer className=\"aut-footer d-flx al-i-c\">\n                            <p className=\"co-lightgray\">\n                                © Copyright 2019 Softcom Limited. All rights reserved\n                        </p>\n                        </footer>\n\n                    </div>\n                </main>\n            </div>\n\n        return (\n            <div>\n                {page}\n            </div>\n        )\n    }\n\n\n};\n\n\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.auth.error,\n        message: state.message\n    }\n}\n\nconst mapDispatchToState = {\n    fetchCurrentUserRequest,\n    submit: forgotPasswordRequest,\n    clearMessage\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(ForgotPasswordPage);\n"],"sourceRoot":""}