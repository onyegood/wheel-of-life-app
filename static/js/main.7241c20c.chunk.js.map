{"version":3,"sources":["redux/actions/auth.js","history.js","redux/types/message.js","redux/types/auth.js","helpers/index.js","serviceWorker.js","routes/GuestRoute.js","routes/UserRoute.js","component/spinners/LoadingSpinner.js","routes/index.js","App.js","base/nBase.js","utils/setAuthorizationHeader.js","utils/getUserId.js","api/auth/index.js","redux/types/roles.js","redux/actions/roles.js","redux/sagas/authSaga.js","redux/types/users.js","redux/actions/users.js","api/users/index.js","redux/sagas/usersSaga.js","api/role/index.js","redux/sagas/rolesSaga.js","redux/types/permissions.js","redux/actions/permissions.js","api/permission/index.js","redux/sagas/permissionsSaga.js","redux/sagas/index.js","redux/reducer/auth.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["userLoggedIn","payload","type","USER_LOGGED_IN","userLoggedOut","USER_LOGGED_OUT","loginUserRequests","LOGIN_USER_REQUEST","logoutUserRequest","LOGOUT_USER_REQUEST","fetchCurrentUserRequest","FETCH_CURRENT_USER_REQUEST","fetchCurrentUserSuccess","FETCH_CURRENT_USER_SUCCESS","userAvatarUploadSuccess","USER_AVATAR_UPLOAD_SUCCESS","userAvatarUploadFailure","USER_AVATAR_UPLOAD_FAILURE","changePasswordRequest","CHANGE_PASSWORD_REQUEST","changePasswordSuccess","CHANGE_PASSWORD_SUCCESS","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","forgotPasswordRequest","FORGOT_PASSWORD_REQUEST","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","createBrowserHistory","ERROR_MESSAGE","SUCCESS_MESSAGE","CLEAR_MESSAGE","LOGIN_USER_FAIL","CREATE_USER_REQUEST","CREATE_USER_FAILURE","FETCH_CURRENT_USER_FAILURE","USER_AVATAR_UPLOAD_REQUEST","CHANGE_PASSWORD_FAILURE","RESET_PASSWORD_REQUEST","RESET_PASSWORD_FAILURE","FORGOT_PASSWORD_FAILURE","errorHandler","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","error","undefined","response","data","message","messageHandler","success","emailPattern","Boolean","window","location","hostname","match","connect","state","props","isAuthenticated","localStorage","token","Component","component","rest","render","to","LoadingSpinner","className","HomePage","lazy","Routes","fallback","path","exact","App","componentDidMount","newBase","mapDispatchToProps","logout","auth","axios","defaults","headers","common","authorization","href","includes","getUserId","getItem","decoder","_id","login","a","post","status","Error","errors","signup","changePassword","resetPassword","forgotPassword","uploadAvatar","currentUser","get","FETCH_ROLES_REQUEST","ADD_ROLE_REQUEST","UPDATE_ROLE_REQUEST","DELETE_ROLE_REQUEST","fetchRolesRequest","fetchRolesSuccess","addRoleSuccess","updateRoleSuccess","deleteRoleSuccess","fetchUserSaga","createUserSaga","loginUserSaga","userAvatarUploadSaga","changePasswordSaga","resetPasswordSaga","forgotPasswordSaga","logoutUserSaga","call","put","action","user","setItem","setAuthorizationHeader","admin","role","history","push","console","log","removeItem","FETCH_USERS_REQUEST","FETCH_USER_REQUEST","ADD_USER_REQUEST","UPDATE_USER_REQUEST","DELETE_USER_REQUEST","CREATE_NEW_USER_REQUEST","fetchUsersRequest","fetchUsersSuccess","fetchUserRequest","fetchUserSuccess","createNewUserSuccess","addUserSuccess","updateUserSuccess","users","adminUser","createUser","addUser","updateUser","deleteUser","delete","fetchUsersSaga","fetchAdminUserSaga","createNewUserSaga","addUserSaga","updateUserSaga","deleteUserSaga","roles","addRole","updateRole","deleteRole","id","fetchRolesSaga","addRoleSaga","updateRoleSaga","deleteRoleSaga","FETCH_PERMISSIONS_REQUEST","ADD_PERMISSION_REQUEST","UPDATE_PERMISSION_REQUEST","DELETE_PERMISSION_REQUEST","fetchPermissionsRequest","fetchPermissionsSuccess","addPermissionSuccess","updatePermissionSuccess","permissions","addPermission","permission","updatePermission","deletePermission","fetchPermissionsSaga","addPermissionSaga","updatePermissionSaga","deletePermissionSaga","rootSaga","takeLatest","initialState","loaded","appReducer","combineReducers","Object","assign","profile_picture","sagaMiddleware","createSagaMiddleware","devTools","applyMiddleware","store","createStore","run","saga","dispatch","decoded","jwt_decode","currentTime","Date","now","exp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7241c20c.chunk.js","sourcesContent":["import {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_FAIL,\n  LOGOUT_USER_REQUEST,\n  CREATE_USER_REQUEST,\n  CREATE_USER_FAILURE,\n  FETCH_CURRENT_USER_REQUEST,\n  FETCH_CURRENT_USER_SUCCESS,\n  FETCH_CURRENT_USER_FAILURE,\n  USER_AVATAR_UPLOAD_REQUEST,\n  USER_AVATAR_UPLOAD_SUCCESS,\n  USER_AVATAR_UPLOAD_FAILURE,\n  CHANGE_PASSWORD_REQUEST,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAILURE,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILURE\n} from \"../types/auth\";\n\nexport const createUserRequest = payload => ({ type: CREATE_USER_REQUEST, payload });\nexport const createUserFailure = payload => ({ type: CREATE_USER_FAILURE, payload });\n\nexport const userLoggedIn = payload => ({ type: USER_LOGGED_IN, payload });\nexport const userLoggedOut = () => ({ type: USER_LOGGED_OUT });\n\nexport const loginUserRequests = payload => ({ type: LOGIN_USER_REQUEST, payload });\nexport const loginUserFailure = payload => ({ type: LOGIN_USER_FAIL, payload });\n\nexport const logoutUserRequest = payload => ({ type: LOGOUT_USER_REQUEST, payload });\n\nexport const fetchCurrentUserRequest = () => ({ type: FETCH_CURRENT_USER_REQUEST });\nexport const fetchCurrentUserSuccess = payload => ({ type: FETCH_CURRENT_USER_SUCCESS, payload });\nexport const fetchCurrentUserFailure = payload => ({ type: FETCH_CURRENT_USER_FAILURE, payload });\n\nexport const userAvatarUploadRequest = payload => ({ type: USER_AVATAR_UPLOAD_REQUEST, payload });\nexport const userAvatarUploadSuccess = payload => ({ type: USER_AVATAR_UPLOAD_SUCCESS, payload });\nexport const userAvatarUploadFailure = payload => ({ type: USER_AVATAR_UPLOAD_FAILURE, payload });\n\nexport const changePasswordRequest = payload => ({ type: CHANGE_PASSWORD_REQUEST, payload });\nexport const changePasswordSuccess = payload => ({ type: CHANGE_PASSWORD_SUCCESS, payload });\nexport const changePasswordFailure = payload => ({ type: CHANGE_PASSWORD_FAILURE, payload });\n\nexport const resetPasswordRequest = payload => ({ type: RESET_PASSWORD_REQUEST, payload });\nexport const resetPasswordSuccess = payload => ({ type: RESET_PASSWORD_SUCCESS, payload });\nexport const resetPasswordFailure = payload => ({ type: RESET_PASSWORD_FAILURE, payload });\n\nexport const forgotPasswordRequest = payload => ({ type: FORGOT_PASSWORD_REQUEST, payload });\nexport const forgotPasswordSuccess = payload => ({ type: FORGOT_PASSWORD_SUCCESS, payload });\nexport const forgotPasswordFailure = payload => ({ type: FORGOT_PASSWORD_FAILURE, payload });","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","export const ERROR_MESSAGE = \"ERROR_MESSAGE\";\nexport const SUCCESS_MESSAGE = \"SUCCESS_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","export const USER_LOGGED_IN = \"USER_LOGGED_IN\";\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\nexport const LOCALE_SET = \"LOCALE_SET\";\nexport const ERROR_MSG_RESET = \"ERROR_MSG_RESET\";\n\nexport const LOGIN_USER_REQUEST = \"LOGIN_USER_REQUEST\";\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\n\nexport const CREATE_USER_REQUEST = \"CREATE_USER_REQUEST\";\nexport const CREATE_USER_FAILURE = \"CREATE_USER_FAILURE\";\n\nexport const LOGOUT_USER_REQUEST = \"LOGOUT_USER_REQUEST\";\nexport const CONFIRM_USER_REQUEST = \"CONFIRM_USER_REQUEST\";\nexport const CONFIRM_USER_FAILURE = \"CONFIRM_USER_FAILURE\";\n\nexport const FETCH_CURRENT_USER_REQUEST = \"FETCH_CURRENT_USER_REQUEST\";\nexport const FETCH_CURRENT_USER_SUCCESS = \"FETCH_CURRENT_USER_SUCCESS\";\nexport const FETCH_CURRENT_USER_FAILURE = \"FETCH_CURRENT_USER_FAILURE\";\n\nexport const USER_AVATAR_UPLOAD_REQUEST = \"USER_AVATAR_UPLOAD_REQUEST\";\nexport const USER_AVATAR_UPLOAD_SUCCESS = \"USER_AVATAR_UPLOAD_SUCCESS\";\nexport const USER_AVATAR_UPLOAD_FAILURE = \"USER_AVATAR_UPLOAD_FAILURE\";\n\nexport const CHANGE_PASSWORD_REQUEST = \"CHANGE_PASSWORD_REQUEST\";\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\nexport const CHANGE_PASSWORD_FAILURE = \"CHANGE_PASSWORD_FAILURE\";\n\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_FAILURE = \"RESET_PASSWORD_FAILURE\";\n\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILURE = \"FORGOT_PASSWORD_FAILURE\";","import { ERROR_MESSAGE, SUCCESS_MESSAGE } from \"../redux/types/message\";\nimport { toast } from \"react-toastify\";\nexport const currency = new Intl.NumberFormat(\"en-NG\", {\n  style: \"currency\",\n  currency: \"NGN\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\n\nexport const checkAndUncheck = (array) => {\n  return array.reduce((a, b) => {\n    let isIn = a.find(element => {\n      return element._id === b._id;\n    });\n    if (!isIn) {\n      a.push(b);\n    } else {\n      a.pop(b);\n    }\n    return a;\n  }, []);\n};\n\nexport const number = new Intl.NumberFormat(\"en-NG\", {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nexport const capitalize = (str) => {\n  if (str) {\n    str = str.split(\" \");\n    for (var i = 0, x = str.length; i < x; i++) {\n      str[i] = str[i][0].toUpperCase() + str[i].substr(1);\n    }\n    return str.join(\" \");\n  }\n};\n\nexport const isValidPhoneAllCountry = input => {\n  try {\n    let ISD_CODES = [93, 355, 213, 1684, 376, 244, 1264, 672, 1268, 54, 374, 297, 61, 43, 994, 1242, 973, 880, 1246, 375, 32, 501, 229, 1441, 975, 591, 387, 267, 55, 246, 1284, 673, 359, 226, 257, 855, 237, 1, 238, 1345, 236, 235, 56, 86, 61, 61, 57, 269, 682, 506, 385, 53, 599, 357, 420, 243, 45, 253, 1767, 1809, 1829, 1849, 670, 593, 20, 503, 240, 291, 372, 251, 500, 298, 679, 358, 33, 689, 241, 220, 995, 49, 233, 350, 30, 299, 1473, 1671, 502, 441481, 224, 245, 592, 509, 504, 852, 36, 354, 91, 62, 98, 964, 353, 441624, 972, 39, 225, 1876, 81, 441534, 962, 7, 254, 686, 383, 965, 996, 856, 371, 961, 266, 231, 218, 423, 370, 352, 853, 389, 261, 265, 60, 960, 223, 356, 692, 222, 230, 262, 52, 691, 373, 377, 976, 382, 1664, 212, 258, 95, 264, 674, 977, 31, 599, 687, 64, 505, 227, 234, 683, 850, 1670, 47, 968, 92, 680, 970, 507, 675, 595, 51, 63, 64, 48, 351, 1787, 1939, 974, 242, 262, 40, 7, 250, 590, 290, 1869, 1758, 590, 508, 1784, 685, 378, 239, 966, 221, 381, 248, 232, 65, 1721, 421, 386, 677, 252, 27, 82, 211, 34, 94, 249, 597, 47, 268, 46, 41, 963, 886, 992, 255, 66, 228, 690, 676, 1868, 216, 90, 993, 1649, 688, 1340, 256, 380, 971, 44, 1, 598, 998, 678, 379, 58, 84, 681, 212, 967, 260, 263],\n      //extract numbers from string\n      thenum = input.match(/[0-9]+/g).join(\"\"),\n      totalnums = thenum.length,\n      last10Digits = parseInt(thenum) % 10000000000,\n      ISDcode = thenum.substring(0, totalnums - 10);\n\n    //phone numbers are generally of 8 to 16 digits\n    if (totalnums >= 8 && totalnums <= 16) {\n      if (ISDcode) {\n        if (ISD_CODES.includes(parseInt(ISDcode))) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  return false;\n};\n\nexport const isValidNigeriaPhoneNumber = input => {\n  try {\n    let ISD_CODES = [234, \"+234\"],\n      //extract numbers from string\n      thenum = input.match(/[0-9]+/g).join(\"\"),\n      totalnums = thenum.length,\n      last10Digits = parseInt(thenum) % 10000000000,\n      ISDcode = thenum.substring(0, totalnums - 10);\n\n    //phone numbers are generally of 8 to 16 digits\n    if (totalnums >= 8 && totalnums <= 16) {\n      if (ISDcode) {\n        if (ISD_CODES.includes(parseInt(ISDcode))) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  return false;\n};\n\n//hasPermission(allowedpermission, usersPermissions)\nexport const hasPermission = (permission, permissions) => {\n  return permissions.some(p => p === permission);\n};\n\nexport const isValidBankAccountNumber = input => {\n  try {\n    let thenum = input.match(/[0-9]+/g).join(\"\"),\n      totalnums = thenum.length,\n      last10Digits = parseInt(thenum) % 10000000000,\n      ISDcode = thenum.substring(0, totalnums - 9);\n    if (totalnums >= 10 && totalnums <= 10) {\n      if (ISDcode) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  return false;\n};\n\nexport const isValidBVN = input => {\n  try {\n    let ISD_CODES = [2, \"2\"],\n      //extract numbers from string\n      thenum = input.match(/[0-9]+/g).join(\"\"),\n      totalnums = thenum.length,\n      last10Digits = parseInt(thenum) % 10000000000,\n      ISDcode = thenum.substring(0, totalnums - 10);\n\n    //phone numbers are generally of 8 to 16 digits\n    if (totalnums >= 11) {\n      if (ISDcode) {\n        if (ISD_CODES.includes(parseInt(ISDcode))) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  return false;\n};\n\nexport const isUnique = (array) => {\n  return array.reduce((a, b) => {\n    let isIn = a.find(element => {\n      return element.STATE === b.STATE;\n    });\n    if (!isIn) {\n      a.push(b);\n    }\n    return a;\n  }, []);\n};\n\nexport const errorHandler = (error) => {\n  if (error.response !== undefined) {\n    return {\n      type: ERROR_MESSAGE,\n      payload: error.response.data.message\n    };\n  } else {\n    return {\n      type: ERROR_MESSAGE,\n      payload: `${error.message}. Server is temporarily down.`\n    };\n  }\n};\n\nexport const messageHandler = (response) => {\n  if (response.data !== undefined) {\n    return {\n      type: SUCCESS_MESSAGE,\n      payload: {\n        message: response.data.message, \n        success: response.data.success\n      }\n    };\n  } else {\n    return {\n      type: SUCCESS_MESSAGE,\n      payload: {\n        message: response.message,\n        success: response.success\n      }\n    };\n  }\n};\n\nexport const emailPattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => !isAuthenticated ? (<Component {...props} />) : (<Redirect to=\"/dashboard\" />)}\n  />\n);\n\nUserRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state, props) {\n  return { isAuthenticated: !!localStorage.token };\n}\n\nexport default connect(mapStateToProps)(UserRoute);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n    }\n  />\n);\n\nUserRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state, props) {\n  return {\n    isAuthenticated: !!localStorage.token\n  };\n}\n\nexport default connect(mapStateToProps)(UserRoute);","import React from \"react\";\nimport \"./css/LoadingSpinner.css\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loader-overlay\">\n      <div className=\"lds-ring\">\n        <div></div><div></div><div>\n        </div><div></div></div>\n      <p>loading...</p>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { lazy, Suspense } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport GuestRoute from \"./GuestRoute\";\nimport UserRoute from \"./UserRoute\";\nimport Spinner from \"../component/spinners/LoadingSpinner\";\n\n// create Loadable pages\nconst CheckToken = lazy(() => import(\"../pages/auth/CheckToken\"));\nconst LoginPage = lazy(() => import(\"../pages/auth/LoginPage\"));\nconst ChangePasswordPage = lazy(() => import(\"../pages/auth/ChangePasswordPage\"));\nconst ForgotPasswordPage = lazy(() => import(\"../pages/auth/ForgotPasswordPage\"));\nconst ResetPasswordPage = lazy(() => import(\"../pages/auth/ResetPasswordPage\"));\n\nconst HomePage = lazy(() => import(\"../pages/user/HomePage\"));\n\nconst Routes = (props) => (\n  <Router>\n    <Suspense fallback={<Spinner />}>\n      <ToastContainer />\n      <Switch>\n        <Route path={[\"/home\", \"/\"]} exact component={HomePage} /> \n        {/* <UserRoute path=\"/dashboard\" exact component={UserDashboardPage} /> */}\n        {/* <UserRoute path=\"/profile\" exact component={ProfilePage} /> */}\n        \n        {/* <GuestRoute path=\"/\" exact component={CheckToken} /> */}\n        {/* <GuestRoute path=\"/login\" exact component={LoginPage} />\n        <GuestRoute path=\"/change-password/:token\" exact component={ChangePasswordPage} />\n        <GuestRoute path=\"/reset-password/:token\" exact component={ResetPasswordPage} />\n        <GuestRoute path=\"/forgot-password\" exact component={ForgotPasswordPage} /> */}\n      </Switch>\n\n    </Suspense>\n  </Router>\n);\n\nexport default Routes;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport { fetchCurrentUserRequest, logoutUserRequest } from \"./redux/actions/auth\";\nimport Routes from \"./routes\";\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    if (this.props.isAuthenticated)\n      this.props.fetchCurrentUserRequest();\n  }\n\n  render() {\n    return <Routes />;\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.shape({ pathname: PropTypes.string.isRequired })\n    .isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  fetchCurrentUserRequest: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!localStorage.token,\n    auth: state.auth\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchCurrentUserRequest,\n  logout: logoutUserRequest\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","let newBase;\nlet heavyliftURL;\nlet baseUrlServices;\nlet socketBase;\n\nif (window.location.href.includes(\"npa-admin.herokuapp.com\")) {\n  newBase = \"https://api.ncreative.staging.bluegreensoft.com/v1/ncreative/\";\n  heavyliftURL = \"https://api.ncreative.staging.bluegreensoft.com/v1/ncreative/exports\";\n  baseUrlServices = \"https://nsio-services.herokuapp.com/v1/\";\n  socketBase = \"https://nsio-services.herokuapp.com\";\n}\n\nif (window.location.href.includes(\"localhost\")) {\n  newBase = \"https://api.ncreative.staging.bluegreensoft.com/v1/ncreative/\";\n  heavyliftURL = \"https://api.ncreative.staging.bluegreensoft.com/v1/ncreative/exports\";\n  baseUrlServices = \"https://nsio-services.herokuapp.com/v1/\";\n  socketBase = \"https://nsio-services.herokuapp.com\";\n}\n\nif (window.location.href.includes(\"npa.ng\")) {\n  newBase = \"https://api.ncreative.npvn.ng/v1/ncreative/\";\n  heavyliftURL = \"https://api.ncreative.npvn.ng/v1/ncreative/exports\";\n  baseUrlServices = \"https://nsio-services.herokuapp.com/v1/\";\n  socketBase = \"https://nsio-services.herokuapp.com\";\n}\n\nexport { newBase, heavyliftURL, baseUrlServices, socketBase };","import axios from \"axios\";\n\nexport default (token = null) => {\n    if (token) {\n        axios.defaults.headers.common.authorization = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common.authorization;\n    }\n};","import decoder from \"jwt-decode\";\n\nexport const getUserId = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return null;\n  }\n  const decoded = decoder(token);\n  return decoded._id;\n};","import axios from \"axios\";\nimport { newBase } from \"../../base/nBase\";\nimport { getUserId } from \"../../utils/getUserId\";\n\nconst login = async payload => {\n  const response = await axios.post(`${newBase}admin/login`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst signup = async payload => {\n  const response = await axios.post(`${newBase}admin/signup`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst changePassword = async payload => {\n  const response = await axios.post(`${newBase}admin/forgotAdminPassword`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst resetPassword = async payload => {\n  const response = await axios.post(`${newBase}admin/resetAdminPassword`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst forgotPassword = async payload => {\n  const response = await axios.post(`${newBase}admin/forgotAdminPassword`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst uploadAvatar = async payload => {\n  const response = await axios.post(`admin/uploadprofile/${getUserId()}`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst currentUser = async () => {\n  const response = await axios.get(`${newBase}admin/${getUserId()}`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nexport {\n  currentUser,\n  login,\n  signup,\n  uploadAvatar,\n  changePassword,\n  resetPassword,\n  forgotPassword\n};","export const FETCH_ROLES_REQUEST = \"FETCH_ROLES_REQUEST\";\nexport const FETCH_ROLES_SUCCESS = \"FETCH_ROLES_SUCCESS\";\nexport const FETCH_ROLES_FAILED = \"FETCH_ROLES_FAILED\";\n\nexport const ADD_ROLE_REQUEST = \"ADD_ROLE_REQUEST\";\nexport const ADD_ROLE_SUCCESS = \"ADD_ROLE_SUCCESS\";\nexport const ADD_ROLE_FAILURE = \"ADD_ROLE_FAILURE\";\n\nexport const UPDATE_ROLE_REQUEST = \"UPDATE_ROLE_REQUEST\";\nexport const UPDATE_ROLE_SUCCESS = \"UPDATE_ROLE_SUCCESS\";\nexport const UPDATE_ROLE_FAILURE = \"UPDATE_ROLE_FAILURE\";\n\nexport const DELETE_ROLE_REQUEST = \"DELETE_ROLE_REQUEST\";\nexport const DELETE_ROLE_SUCCESS = \"DELETE_ROLE_REQUEST\";\nexport const DELETE_ROLE_FAILURE = \"DELETE_ROLE_FAILURE\";","import {\n  FETCH_ROLES_REQUEST,\n  FETCH_ROLES_SUCCESS,\n  FETCH_ROLES_FAILED,\n  ADD_ROLE_REQUEST,\n  ADD_ROLE_SUCCESS,\n  ADD_ROLE_FAILURE,\n  DELETE_ROLE_REQUEST,\n  DELETE_ROLE_FAILURE,\n  DELETE_ROLE_SUCCESS,\n  UPDATE_ROLE_REQUEST,\n  UPDATE_ROLE_SUCCESS,\n  UPDATE_ROLE_FAILURE\n} from \"../types/roles\";\n\nexport const fetchRolesRequest = payload => ({\n  type: FETCH_ROLES_REQUEST,\n  payload\n});\n\nexport const fetchRolesSuccess = payload => ({\n  type: FETCH_ROLES_SUCCESS,\n  payload\n});\n\nexport const fetchRolesFailed = payload => ({\n  type: FETCH_ROLES_FAILED,\n  payload\n});\n\nexport const addRoleRequest = payload => ({type: ADD_ROLE_REQUEST, payload});\n\nexport const addRoleSuccess = payload => ({type: ADD_ROLE_SUCCESS, payload});\n\nexport const addRoleFailure = payload => ({type: ADD_ROLE_FAILURE, payload});\n\nexport const updateRoleRequest = (payload, _id) => ({type: UPDATE_ROLE_REQUEST, payload, _id});\n\nexport const updateRoleSuccess = (payload, _id) => ({type: UPDATE_ROLE_SUCCESS, payload, _id});\n\nexport const updateRoleFailure = (payload) => ({type: UPDATE_ROLE_FAILURE, payload});\n\nexport const deleterole = (_id) => ({type: DELETE_ROLE_REQUEST, _id});\n\nexport const deleteRoleSuccess = (_id) => ({type: DELETE_ROLE_SUCCESS, _id});\n\nexport const deleteRoleFailure = (payload) => ({type: DELETE_ROLE_FAILURE, payload});","import { put, call } from \"redux-saga/effects\";\nimport {\n  userLoggedIn,\n  userLoggedOut,\n  userAvatarUploadSuccess,\n  userAvatarUploadFailure,\n  changePasswordSuccess,\n  resetPasswordSuccess,\n  forgotPasswordSuccess,\n  fetchCurrentUserSuccess,\n} from \"../actions/auth\";\nimport history from \"../../history\";\nimport setAuthorizationHeader from \"../../utils/setAuthorizationHeader\";\nimport { errorHandler, messageHandler } from \"../../helpers\";\nimport {\n  login, \n  currentUser, \n  signup, \n  uploadAvatar, \n  changePassword, \n  forgotPassword, \n  resetPassword,\n} from \"../../api/auth\";\nimport { fetchRolesRequest } from \"../actions/roles\";\n\nexport function* fetchUserSaga() {\n  try {\n    const response = yield call(currentUser);\n    yield put(fetchCurrentUserSuccess(response.data));\n    yield put(userLoggedIn(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* createUserSaga(action) {\n  try {\n    const response = yield call(signup, action.user);\n    localStorage.setItem(\"token\", response.data.token);\n    yield put(userLoggedIn(response.data.user));\n    setAuthorizationHeader(response.data.token);\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* loginUserSaga(action) {\n  try {\n    const response = yield call(login, action.payload);\n    localStorage.setItem(\"token\", response.token);\n    localStorage.setItem(\"@r\", response.admin.role);\n    yield put(userLoggedIn(response.admin));\n    setAuthorizationHeader(response.token);\n    yield put(messageHandler(response));\n    yield put(fetchRolesRequest());\n    history.push(\"/dashboard\");\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* userAvatarUploadSaga(action) {\n  try {\n    const response = yield call(uploadAvatar, action.payload);\n    yield put(userAvatarUploadSuccess(response));\n    yield put(messageHandler(response));\n  } catch (errors) {\n    yield put(userAvatarUploadFailure(errors));\n  }\n}\n\nexport function* changePasswordSaga(action) {\n  try {\n    const response = yield call(changePassword, action.payload);\n    yield put(changePasswordSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* resetPasswordSaga(action) {\n  try {\n    const response = yield call(resetPassword, action.payload);\n    yield put(resetPasswordSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* forgotPasswordSaga(action) {\n  try {\n    const response = yield call(forgotPassword, action.payload);\n    yield put(forgotPasswordSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n    console.log(\"Hello 3\");\n  }\n}\n\nexport function* logoutUserSaga() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"@r\");\n  history.push(\"/login\");\n  yield put(userLoggedOut());\n  setAuthorizationHeader();\n}\n","export const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_FAILED = \"FETCH_USERS_FAILED\";\n\nexport const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\nexport const FETCH_USER_FAILED = \"FETCH_USER_FAILED\";\n\nexport const ADD_USER_REQUEST = \"ADD_USER_REQUEST\";\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\nexport const ADD_USER_FAILURE = \"ADD_USER_FAILURE\";\n\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILURE = \"UPDATE_USER_FAILURE\";\n\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\nexport const DELETE_USER_FAILURE = \"DELETE_USER_FAILURE\";\n\nexport const CREATE_NEW_USER_REQUEST = \"CREATE_NEW_USER_REQUEST\";\nexport const CREATE_NEW_USER_SUCCESS = \"CREATE_NEW_USER_SUCCESS\";\nexport const CREATE_NEW_USER_FAILED = \"CREATE_NEW_USER_FAILED\";","import {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_FAILED,\n  ADD_USER_REQUEST,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAILURE,\n  DELETE_USER_REQUEST,\n  DELETE_USER_FAILURE,\n  DELETE_USER_SUCCESS,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAILURE,\n  CREATE_NEW_USER_REQUEST,\n  CREATE_NEW_USER_SUCCESS,\n  CREATE_NEW_USER_FAILED,\n  FETCH_USER_REQUEST,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_FAILED\n} from \"../types/users\";\n\nexport const fetchUsersRequest = payload => ({\n  type: FETCH_USERS_REQUEST,\n  payload\n});\n\nexport const fetchUsersSuccess = payload => ({\n  type: FETCH_USERS_SUCCESS,\n  payload\n});\n\nexport const fetchUsersFailed = payload => ({\n  type: FETCH_USERS_FAILED,\n  payload\n});\n\nexport const fetchUserRequest = payload => ({\n  type: FETCH_USER_REQUEST,\n  payload\n});\n\nexport const fetchUserSuccess = payload => ({\n  type: FETCH_USER_SUCCESS,\n  payload\n});\n\nexport const fetchUserFailed = payload => ({\n  type: FETCH_USER_FAILED,\n  payload\n});\n\nexport const createNewUserRequest = payload => ({ type: CREATE_NEW_USER_REQUEST, payload });\nexport const createNewUserSuccess = payload => ({ type: CREATE_NEW_USER_SUCCESS, payload });\nexport const createNewUserFailed = payload => ({ type: CREATE_NEW_USER_FAILED, payload });\n\nexport const addUserRequest = (payload) => ({ type: ADD_USER_REQUEST, payload });\n\nexport const addUserSuccess = (payload) => ({ type: ADD_USER_SUCCESS, payload });\n\nexport const addUserFailure = payload => ({ type: ADD_USER_FAILURE, payload });\n\nexport const updateUserRequest = (payload, _id) => ({ type: UPDATE_USER_REQUEST, payload, _id });\n\nexport const updateUserSuccess = (payload, _id) => ({ type: UPDATE_USER_SUCCESS, payload, _id });\n\nexport const updateUserFailure = (payload) => ({ type: UPDATE_USER_FAILURE, payload });\n\nexport const deleteuser = payload => ({ type: DELETE_USER_REQUEST, payload });\n\nexport const deleteUserSuccess = payload => ({ type: DELETE_USER_SUCCESS, payload });\n\nexport const deleteUserFailure = (payload) => ({ type: DELETE_USER_FAILURE, payload });","import axios from \"axios\";\nimport { newBase } from \"../../base/nBase\";\nimport { getUserId } from \"../../utils/getUserId\";\n\nconst users = async () => {\n  const response = await axios.get(`${newBase}admins`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst adminUser = async () => {\n  const response = await axios.get(`${newBase}admin/${getUserId()}`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst createUser = async payload => {\n  const response = await axios.post(`${newBase}admin`, payload.payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst addUser = async payload => {\n  const response = await axios.post(`${newBase}admin`, payload.user);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst updateUser = async payload => {\n  const response = await axios.put(`${newBase}admin/${payload._id}`, payload.user);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst deleteUser = async payload => {\n  const response = await axios.delete(`${newBase}admin/${payload._id}`, payload.user);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst updateCentreAdmin = async payload => {\n  const response = await axios.put(`${newBase}centreadmins/${payload._id}`, payload.data);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\n\nconst createNewCentreAdmin = async payload => {\n  const response = await axios.post(`${newBase}centreadmins`, payload.data);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nexport {\n  users,\n  adminUser,\n  createUser,\n  addUser,\n  updateUser,\n  deleteUser,\n  updateCentreAdmin,\n  createNewCentreAdmin\n};","import { call, put } from \"redux-saga/effects\";\nimport {\n  fetchUsersSuccess,\n  addUserSuccess,\n  updateUserSuccess,\n  fetchUsersRequest,\n  createNewUserSuccess,\n  fetchUserSuccess,\n  fetchUserRequest\n} from \"../actions/users\";\nimport { \n  users, \n  adminUser, \n  createUser, \n  addUser, \n  updateUser, \n  deleteUser\n} from \"../../api/users\";\nimport { messageHandler, errorHandler } from \"../../helpers\";\n\nexport function* fetchUsersSaga() {\n  try {\n    const response = yield call(users);\n    yield put(fetchUsersSuccess(response));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* fetchAdminUserSaga() {\n  try {\n    const response = yield call(adminUser);\n    yield put(fetchUserSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* createNewUserSaga(action) {\n  try {\n    const response = yield call(createUser, action);\n    yield put(createNewUserSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* addUserSaga(action) {\n  try {\n    const response = yield call(addUser, action);\n    yield put(addUserSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* updateUserSaga(action) {\n  try {\n    const response = yield call(updateUser, action);\n    yield put(fetchUserRequest(action._id));\n    yield put(updateUserSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* deleteUserSaga(action) {\n  try {\n    const response = yield call(deleteUser, action);\n    yield put(fetchUsersRequest());\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}","import axios from \"axios\";\nimport { newBase } from \"../../base/nBase\";\n\nconst roles = async () => {\n  const response = await axios.get(`${newBase}admin/roles`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst addRole = async payload => {\n  const response = await axios.post(`${newBase}admin/roles`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst updateRole = async (payload) => {\n  const response = await axios.put(`${newBase}admin/roles/${payload._id}`, payload.role);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst deleteRole = async (id, payload) => {\n  const response = await axios.delete(`${newBase}admin/roles/${id}`, payload);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nexport {\n  roles,\n  addRole,\n  updateRole,\n  deleteRole\n};","import { call, put } from \"redux-saga/effects\";\nimport {\n  fetchRolesSuccess,\n  addRoleSuccess,\n  deleteRoleSuccess,\n  updateRoleSuccess,\n  fetchRolesRequest\n} from \"../actions/roles\";\nimport { \n  roles, \n  addRole, \n  updateRole, \n  deleteRole \n} from \"../../api/role\";\nimport { \n  messageHandler, \n  errorHandler \n} from \"../../helpers\";\n\nexport function* fetchRolesSaga() {\n  try {\n    const response = yield call(roles);\n    yield put(fetchRolesSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* addRoleSaga(action) {\n  try {\n    const response = yield call(addRole, action.payload);\n    yield put(addRoleSuccess(response.data));\n    yield put(fetchRolesRequest());\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* updateRoleSaga(action) {\n  try {\n    const response = yield call(updateRole, action);\n    yield put(updateRoleSuccess(response.data));\n    yield put(fetchRolesRequest());\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* deleteRoleSaga() {\n  try {\n    const response = yield call(deleteRole);\n    yield put(fetchRolesRequest());\n    yield put(deleteRoleSuccess(response));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}","export const FETCH_PERMISSIONS_REQUEST = \"FETCH_PERMISSIONS_REQUEST\";\nexport const FETCH_PERMISSIONS_SUCCESS = \"FETCH_PERMISSIONS_SUCCESS\";\nexport const FETCH_PERMISSIONS_FAILED = \"FETCH_PERMISSIONS_FAILED\";\n\nexport const ADD_PERMISSION_REQUEST = \"ADD_PERMISSION_REQUEST\";\nexport const ADD_PERMISSION_SUCCESS = \"ADD_PERMISSION_SUCCESS\";\nexport const ADD_PERMISSION_FAILURE = \"ADD_PERMISSION_FAILURE\";\n\nexport const UPDATE_PERMISSION_REQUEST = \"UPDATE_PERMISSION_REQUEST\";\nexport const UPDATE_PERMISSION_SUCCESS = \"UPDATE_PERMISSION_SUCCESS\";\nexport const UPDATE_PERMISSION_FAILURE = \"UPDATE_PERMISSION_FAILURE\";\n\nexport const DELETE_PERMISSION_REQUEST = \"DELETE_PERMISSION_REQUEST\";\nexport const DELETE_PERMISSION_SUCCESS = \"DELETE_PERMISSION_REQUEST\";\nexport const DELETE_PERMISSION_FAILURE = \"DELETE_PERMISSION_FAILURE\";","import {\n  FETCH_PERMISSIONS_REQUEST,\n  FETCH_PERMISSIONS_SUCCESS,\n  FETCH_PERMISSIONS_FAILED,\n  ADD_PERMISSION_REQUEST,\n  ADD_PERMISSION_SUCCESS,\n  ADD_PERMISSION_FAILURE,\n  DELETE_PERMISSION_REQUEST,\n  DELETE_PERMISSION_FAILURE,\n  DELETE_PERMISSION_SUCCESS,\n  UPDATE_PERMISSION_REQUEST,\n  UPDATE_PERMISSION_SUCCESS,\n  UPDATE_PERMISSION_FAILURE\n} from \"../types/permissions\";\n\nexport const fetchPermissionsRequest = payload => ({\n  type: FETCH_PERMISSIONS_REQUEST,\n  payload\n});\n\nexport const fetchPermissionsSuccess = payload => ({\n  type: FETCH_PERMISSIONS_SUCCESS,\n  payload\n});\n\nexport const fetchPermissionsFailed = payload => ({\n  type: FETCH_PERMISSIONS_FAILED,\n  payload\n});\n\nexport const addPermissionRequest = payload => ({type: ADD_PERMISSION_REQUEST, payload});\n\nexport const addPermissionSuccess = payload => ({type: ADD_PERMISSION_SUCCESS, payload});\n\nexport const addPermissionFailure = payload => ({type: ADD_PERMISSION_FAILURE, payload});\n\nexport const updatePermissionRequest = (payload, _id) => ({type: UPDATE_PERMISSION_REQUEST, payload, _id});\n\nexport const updatePermissionSuccess = (payload, _id) => ({type: UPDATE_PERMISSION_SUCCESS, payload, _id});\n\nexport const updatePermissionFailure = (payload) => ({type: UPDATE_PERMISSION_FAILURE, payload});\n\nexport const deletePermission = (_id) => ({type: DELETE_PERMISSION_REQUEST, _id});\n\nexport const deletePermissionSuccess = (_id) => ({type: DELETE_PERMISSION_SUCCESS, _id});\n\nexport const deletePermissionFailure = (payload) => ({type: DELETE_PERMISSION_FAILURE, payload});","import axios from \"axios\";\nimport { newBase } from \"../../base/nBase\";\n\nconst permissions = async () => {\n  const response = await axios.get(`${newBase}admin/permissions`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst addPermission = async payload => {\n  const response = await axios.post(`${newBase}admin/permissions`, payload.permission);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst updatePermission = async payload => {\n  const response = await axios.put(`${newBase}admin/permissions/${payload._id}`, payload.permission);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nconst deletePermission = async payload => {\n  const response = await axios.delete(`${newBase}admin/permissions/${payload._id}`);\n  const data = await response.data;\n  if (response.status > 400) {\n    throw new Error(data.errors);\n  }\n  return data;\n};\n\nexport {\n  permissions,\n  addPermission,\n  updatePermission,\n  deletePermission\n};","import { call, put } from \"redux-saga/effects\";\nimport {\n  fetchPermissionsSuccess,\n  addPermissionSuccess,\n  deletePermissionSuccess,\n  updatePermissionSuccess,\n  fetchPermissionsRequest\n} from \"../actions/permissions\";\n\nimport { \n  permissions, \n  addPermission, \n  updatePermission, \n  deletePermission\n} from \"../../api/permission\";\nimport { \n  messageHandler, \n  errorHandler \n} from \"../../helpers\";\n\nexport function* fetchPermissionsSaga() {\n  try {\n    const response = yield call(permissions);\n    yield put(fetchPermissionsSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* addPermissionSaga(action) {\n  try {\n    const response = yield call(addPermission, action.payload);\n    yield put(addPermissionSuccess(response.data));\n    yield put(fetchPermissionsRequest());\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* updatePermissionSaga(action) {\n  try {\n    const response = yield call(updatePermission, action);\n    yield put(updatePermissionSuccess(response.data));\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}\n\nexport function* deletePermissionSaga(action) {\n  try {\n    const response = yield call(deletePermission, action);\n    yield put(fetchPermissionsRequest());\n    yield put(messageHandler(response));\n  } catch (error) {\n    yield put(errorHandler(error));\n  }\n}","import { takeLatest } from \"redux-saga/effects\";\n\nimport {\n  createUserSaga,\n  fetchUserSaga,\n  loginUserSaga,\n  logoutUserSaga,\n  userAvatarUploadSaga,\n  forgotPasswordSaga,\n  changePasswordSaga,\n  resetPasswordSaga\n} from \"./authSaga\";\n\nimport {\n  CREATE_USER_REQUEST,\n  FETCH_CURRENT_USER_REQUEST,\n  LOGIN_USER_REQUEST,\n  LOGOUT_USER_REQUEST,\n  USER_AVATAR_UPLOAD_REQUEST,\n  FORGOT_PASSWORD_REQUEST,\n  CHANGE_PASSWORD_REQUEST,\n  RESET_PASSWORD_REQUEST\n} from \"../types/auth\";\n\n//User\nimport {\n  FETCH_USERS_REQUEST,\n  ADD_USER_REQUEST,\n  DELETE_USER_REQUEST,\n  UPDATE_USER_REQUEST,\n  CREATE_NEW_USER_REQUEST,\n  FETCH_USER_REQUEST\n} from \"../types/users\";\n\nimport {\n  fetchUsersSaga,\n  addUserSaga,\n  deleteUserSaga,\n  updateUserSaga,\n  createNewUserSaga,\n  fetchAdminUserSaga\n} from \"./usersSaga\";\n\n//Role\nimport {\n  FETCH_ROLES_REQUEST,\n  ADD_ROLE_REQUEST,\n  DELETE_ROLE_REQUEST,\n  UPDATE_ROLE_REQUEST\n} from \"../types/roles\";\nimport {\n  fetchRolesSaga,\n  addRoleSaga,\n  deleteRoleSaga,\n  updateRoleSaga\n} from \"./rolesSaga\";\n\n//Permissions\nimport {\n  FETCH_PERMISSIONS_REQUEST,\n  ADD_PERMISSION_REQUEST,\n  DELETE_PERMISSION_REQUEST,\n  UPDATE_PERMISSION_REQUEST\n} from \"../types/permissions\";\nimport {\n  fetchPermissionsSaga,\n  addPermissionSaga,\n  deletePermissionSaga,\n  updatePermissionSaga\n} from \"./permissionsSaga\";\n\n\n// import { DO_UPLOAD_REQUEST } from \"../types/upload\";\n// import { doUploadSaga } from \"./uploadSaga\";\n\n\nexport default function* rootSaga() {\n  //User Authentications Operation\n  yield takeLatest(CREATE_USER_REQUEST, createUserSaga);\n  yield takeLatest(FETCH_CURRENT_USER_REQUEST, fetchUserSaga);\n  yield takeLatest(LOGIN_USER_REQUEST, loginUserSaga);\n  yield takeLatest(LOGOUT_USER_REQUEST, logoutUserSaga);\n  yield takeLatest(USER_AVATAR_UPLOAD_REQUEST, userAvatarUploadSaga);\n  yield takeLatest(FORGOT_PASSWORD_REQUEST, forgotPasswordSaga);\n  yield takeLatest(CHANGE_PASSWORD_REQUEST, changePasswordSaga);\n  yield takeLatest(RESET_PASSWORD_REQUEST, resetPasswordSaga);\n\n  //Users\n  yield takeLatest(FETCH_USERS_REQUEST, fetchUsersSaga);\n  yield takeLatest(FETCH_USER_REQUEST, fetchAdminUserSaga);\n  yield takeLatest(ADD_USER_REQUEST, addUserSaga);\n  yield takeLatest(DELETE_USER_REQUEST, deleteUserSaga);\n  yield takeLatest(UPDATE_USER_REQUEST, updateUserSaga);\n\n  //Roles\n  yield takeLatest(FETCH_ROLES_REQUEST, fetchRolesSaga);\n  yield takeLatest(ADD_ROLE_REQUEST, addRoleSaga);\n  yield takeLatest(DELETE_ROLE_REQUEST, deleteRoleSaga);\n  yield takeLatest(UPDATE_ROLE_REQUEST, updateRoleSaga);\n\n  //Permissions\n  yield takeLatest(FETCH_PERMISSIONS_REQUEST, fetchPermissionsSaga);\n  yield takeLatest(ADD_PERMISSION_REQUEST, addPermissionSaga);\n  yield takeLatest(DELETE_PERMISSION_REQUEST, deletePermissionSaga);\n  yield takeLatest(UPDATE_PERMISSION_REQUEST, updatePermissionSaga);\n\n  //Uploads\n  // yield takeLatest(DO_UPLOAD_REQUEST, doUploadSaga);\n  \n  // Create New User \n  yield takeLatest(CREATE_NEW_USER_REQUEST, createNewUserSaga);\n}","import {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  LOGOUT_USER_REQUEST,\n  FETCH_CURRENT_USER_SUCCESS,\n  FETCH_CURRENT_USER_REQUEST,\n  USER_AVATAR_UPLOAD_REQUEST,\n  USER_AVATAR_UPLOAD_SUCCESS,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_FAIL,\n  CREATE_USER_REQUEST,\n  CREATE_USER_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS\n} from \"../types/auth\";\n\nconst initialState = {\n  loaded: false,\n  error: null,\n  auth: null\n};\n\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n  case CREATE_USER_REQUEST:\n  case FETCH_CURRENT_USER_REQUEST:\n  case LOGOUT_USER_REQUEST:\n  case USER_AVATAR_UPLOAD_REQUEST:\n    return { ...state, loaded: true };\n  case CREATE_USER_FAILURE:\n    return { ...state, signup: action.payload, loaded: false };\n  case LOGIN_USER_REQUEST:\n    return { ...state, loaded: true };\n  case LOGIN_USER_FAIL:\n    return { ...state, error: action.payload, loaded: false };\n  case USER_LOGGED_IN:\n    return { ...action.payload, loaded: false };\n  case FETCH_CURRENT_USER_SUCCESS:\n    return { ...state, ...action.payload, loaded: false };\n  case FORGOT_PASSWORD_SUCCESS:\n    return { ...state, ...action.payload, loaded: false };\n  case USER_LOGGED_OUT:\n    return {\n      loaded: false,\n      auth: null\n    };\n  case USER_AVATAR_UPLOAD_SUCCESS:\n    return Object.assign({}, state, {\n      profile_picture: action.payload.profile_picture,\n      loaded: false\n    });\n  default:\n    return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { LOGOUT_USER_REQUEST } from \"../types/auth\";\nimport auth from \"./auth\";\n// import users from \"./users\";\n// import approvals from \"./approvals\";\n// import message from \"./message\";\n// import permissions from \"./permissions\";\n// import roles from \"./roles\";\n// import centres from \"./centres\";\n// import payments from \"./payments\";\n// import announcements from \"./announcement\";\n\nconst appReducer = combineReducers({\n  auth\n});\n\n// Reset Redux Store on Logout\nexport default (state, action) => {\n  if (action.type === LOGOUT_USER_REQUEST) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { logger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport saga from \"./sagas\";\n\nimport reducer from \"./reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst devTools = process.env.NODE_ENV === \"production\"\n  ? applyMiddleware(sagaMiddleware)\n  : composeWithDevTools(applyMiddleware(sagaMiddleware, logger));\n\nconst store = createStore(reducer, devTools);\n\nsagaMiddleware.run(saga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport jwt_decode from \"jwt-decode\";\nimport App from \"./App\";\nimport { Router, Route } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport history from \"./history\";\nimport {  fetchCurrentUserRequest, logoutUserRequest } from \"./redux/actions/auth\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\nimport { fetchRolesRequest } from \"./redux/actions/roles\";\n\nif (localStorage.token) {\n  setAuthorizationHeader(localStorage.token);\n  store.dispatch(fetchCurrentUserRequest());\n  store.dispatch(fetchRolesRequest());\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.token);\n  //Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime + 12 * 60 * 60) {\n    //Logout user\n    store.dispatch(logoutUserRequest());\n  }\n}\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <Route component={App} />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\"));\nserviceWorker.unregister();"],"sourceRoot":""}