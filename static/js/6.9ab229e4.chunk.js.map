{"version":3,"sources":["redux/actions/message.js","pages/auth/ChangePasswordPage.js"],"names":["clearMessage","type","CLEAR_MESSAGE","ChangePasswordPage","state","data","password","confirm_password","error","isLoading","isProcessing","message","_id","componentWillReceiveProps","nextProps","undefined","setState","setTimeout","toast","TYPE","ERROR","componentDidMount","token","props","match","params","decoded","jwtDecode","id","onChange","e","target","name","value","onSubmit","preventDefault","validate","Object","keys","length","payload","admin_id","new_password","submit","success","SUCCESS","history","push","this","page","className","src","alt","for","width","height","viewBox","fill","stroke","xmlns","d","strokeWidth","strokeLnecap","strokeLinejoin","class","to","Component","mapDispatchToState","changePasswordRequest","connect","auth"],"mappings":"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","file":"static/js/6.9ab229e4.chunk.js","sourcesContent":["import {\n    CLEAR_MESSAGE\n} from \"../types/message\";\n\nexport const clearMessage = () => ({ type: CLEAR_MESSAGE });","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport jwtDecode from \"jwt-decode\";\nimport history from \"../../history\";\nimport { changePasswordRequest } from \"../../redux/actions/auth\";\nimport { toast } from \"react-toastify\";\nimport { Link } from 'react-router-dom';\nimport { clearMessage } from \"../../redux/actions/message\";\nclass ChangePasswordPage extends Component {\n\n  state = {\n    data: {\n      password: \"\",\n      confirm_password: \"\"\n    },\n    error: {},\n    isLoading: true,\n    isProcessing: false,\n    message: '',\n    _id: null\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.message !== undefined) {\n      this.setState({ message: nextProps.message });\n    }\n\n    setTimeout(() => {\n      toast(this.state.error.message, { type: toast.TYPE.ERROR });\n    }, 500);\n  }\n\n  componentDidMount = () => {\n    const token = this.props.match.params.token;\n    //Decode token and get user id\n    const decoded = jwtDecode(token);\n    //Decode token and get user id\n    setTimeout(() => this.setState({ isLoading: false, _id: decoded.id }), 2000);\n  }\n\n  onChange = e => this.setState({\n    data: {\n      ...this.state.data,\n      [e.target.name]: e.target.value\n    }\n  });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.setState({ isProcessing: true });\n    const error = this.validate(this.state.data);\n    this.setState({ error });\n    if (Object.keys(error).length === 0) {\n      const { data, _id } = this.state;\n      const payload = {\n        admin_id: _id,\n        new_password: data.password\n      }\n      this.props.submit(payload);\n      setTimeout(() => {\n        if (this.props.message.success) {\n          toast(this.props.message.payload, { type: toast.TYPE.SUCCESS });\n          this.setState({ isProcessing: false });\n          history.push(\"/login\");\n        } else {\n          toast(this.props.message.payload, { type: toast.TYPE.ERROR });\n          this.setState({ isProcessing: false });\n        }\n      }, 3000);\n      setTimeout(() => {\n        this.props.clearMessage();\n      }, 4000);\n    } else {\n      this.setState({ isProcessing: false });\n    }\n  };\n\n  validate = data => {\n    const error = {};\n    if (!data.password)\n      error.password = \"Password is required\";\n    if (!data.confirm_password)\n      error.confirm_password = \"Confirm password is required\";\n    else if (data.password !== data.confirm_password)\n      error.confirm_password = \"Password not match\";\n    return error;\n  };\n  render() {\n\n    const { data, error, isLoading, isProcessing } = this.state;\n\n    const page =\n      <div className=\"bg-white is-sign-in\">\n        <main className=\"main\" id=\"mainContent\">\n          <div className=\"major-bg maxwidth-xxl mx-auto\">\n            <section className=\"centered-box sign-in-wrapper auth-container\">\n              <header className=\"logo-container mb-2h\">\n                <img src=\"/assets/img/npower-logo.png\" alt=\"npower-logo\" />\n              </header>\n              <br />\n              <form onSubmit={this.onSubmit} className=\"aut sign-in-form box-shad-padded bg-white\">\n                <label className=\"form-label tx-c fw-bold mb-3 capitalize\" for=\"sign-up-form\">\n                  Create Password\n                            </label>\n                <div className=\"email input\">\n                  <label for=\"password\"> New Password </label>\n                  <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" stroke=\"#999\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M15.2222 9H2.77778C1.79594 9 1 9.79594 1 10.7778V17C1 17.9818 1.79594 18.7778 2.77778 18.7778H15.2222C16.2041 18.7778 17 17.9818 17 17V10.7778C17 9.79594 16.2041 9 15.2222 9Z\"\n                      strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                    <path d=\"M4.55566 9V5.44444C4.55566 4.2657 5.02392 3.13524 5.85741 2.30175C6.69091 1.46825 7.82137 1 9.00011 1C10.1788 1 11.3093 1.46825 12.1428 2.30175C12.9763 3.13524 13.4446 4.2657 13.4446 5.44444V9\"\n                      strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={data.password}\n                    onChange={this.onChange}\n                    className={error.password\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"} />\n                  <div className=\"invalid-feedback\">{error.password}</div>\n                </div>\n\n                <div className=\"password input my-0\">\n                  <label for=\"password\"> Confirm Password </label>\n                  <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" stroke=\"#999\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M15.2222 9H2.77778C1.79594 9 1 9.79594 1 10.7778V17C1 17.9818 1.79594 18.7778 2.77778 18.7778H15.2222C16.2041 18.7778 17 17.9818 17 17V10.7778C17 9.79594 16.2041 9 15.2222 9Z\"\n                      strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                    <path d=\"M4.55566 9V5.44444C4.55566 4.2657 5.02392 3.13524 5.85741 2.30175C6.69091 1.46825 7.82137 1 9.00011 1C10.1788 1 11.3093 1.46825 12.1428 2.30175C12.9763 3.13524 13.4446 4.2657 13.4446 5.44444V9\"\n                      strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                  <input\n                    type=\"password\"\n                    id=\"confirm_password\"\n                    name=\"confirm_password\"\n                    value={data.confirm_password}\n                    onChange={this.onChange}\n                    className={error.confirm_password\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"} />\n                  <div className=\"invalid-feedback\">{error.confirm_password}</div>\n                </div>\n\n\n                {isProcessing ?\n                  <span className=\"submit mb-1 mt-3 d-flx al-i-c j-c-c\">\n                    <i className=\"fa fa-spinner fa-spin\" />\n                    <span className=\"ml-h\">Processing...</span>\n                  </span> :\n\n                  <button className=\"submit mb-1 mt-3 d-flx al-i-c j-c-c\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"\n                      fill=\"none\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M4.16667 9.16667H15.8333C16.7538 9.16667 17.5 9.91286 17.5 10.8333V16.6667C17.5 17.5871 16.7538 18.3333 15.8333 18.3333H4.16667C3.24619 18.3333 2.5 17.5871 2.5 16.6667V10.8333C2.5 9.91286 3.24619 9.16667 4.16667 9.16667Z\"\n                        strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                      <path d=\"M14.1666 9.16667V5.83334C14.1677 4.80005 13.7847 3.80323 13.0921 3.03639C12.3996 2.26956 11.4468 1.78742 10.4187 1.68358C9.39064 1.57974 8.36067 1.86159 7.52873 2.47443C6.69679 3.08728 6.12224 3.98738 5.91662 5.00001\"\n                        strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\" />\n                    </svg>\n                    <span className=\"ml-h\">Submit</span>\n                  </button>}\n\n                <p class=\"option\">\n                  Have an account? <Link className=\"capitalize tx-r nanofont mt-h\" to=\"/\">Sign In</Link>\n                </p>\n              </form>\n            </section>\n            <footer className=\"aut-footer d-flx al-i-c\">\n              <p className=\"co-lightgray\">\n                © Copyright 2019 Softcom Limited. All rights reserved\n                        </p>\n            </footer>\n\n          </div>\n        </main>\n      </div>\n\n    return (\n      <div>\n        {page}\n      </div>\n    )\n  }\n\n\n};\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.auth.error,\n    message: state.message\n  }\n}\n\nconst mapDispatchToState = {\n  submit: changePasswordRequest,\n  clearMessage\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(ChangePasswordPage);\n"],"sourceRoot":""}